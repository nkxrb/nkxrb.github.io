"use strict";(self.webpackChunknkxrb_blog=self.webpackChunknkxrb_blog||[]).push([[296],{684:(e,l,i)=>{i.r(l),i.d(l,{data:()=>a});const a={key:"v-7e25fb5f",path:"/front/",title:"前端技能自查表",lang:"zh-cn",frontmatter:{},excerpt:"",headers:[{level:3,title:"CSS",slug:"css",children:[]},{level:3,title:"HTML",slug:"html",children:[]},{level:3,title:"SVG",slug:"svg",children:[]},{level:3,title:"Canvas",slug:"canvas",children:[]},{level:3,title:"JavaScript",slug:"javascript",children:[]},{level:3,title:"TypeScript",slug:"typescript",children:[]},{level:3,title:"HTTP",slug:"http",children:[]},{level:3,title:"CDN与DNS负载均衡",slug:"cdn与dns负载均衡",children:[]},{level:3,title:"浏览器内核与加载机制",slug:"浏览器内核与加载机制",children:[]},{level:3,title:"浏览器API",slug:"浏览器api",children:[]},{level:3,title:"ES6",slug:"es6",children:[]},{level:3,title:"Eslint",slug:"eslint",children:[]},{level:3,title:"V8引擎",slug:"v8引擎",children:[]},{level:3,title:"Tree Shaking",slug:"tree-shaking",children:[]},{level:3,title:"单元测试",slug:"单元测试",children:[]},{level:3,title:"rollup",slug:"rollup",children:[]},{level:3,title:"webpack",slug:"webpack",children:[]},{level:3,title:"vite",slug:"vite",children:[]},{level:3,title:"Node",slug:"node",children:[]},{level:3,title:"Vue",slug:"vue",children:[]},{level:3,title:"微信小程序",slug:"微信小程序",children:[]},{level:3,title:"React",slug:"react",children:[]},{level:3,title:"Electron 桌面应用",slug:"electron-桌面应用",children:[]},{level:3,title:"Linux",slug:"linux",children:[]},{level:3,title:"Java",slug:"java",children:[]}],filePathRelative:"front/README.md",git:{updatedTime:163586601e4,contributors:[{name:"w626023781@163.com",email:"w626023781@163.com",commits:1}]}}},321:(e,l,i)=>{i.r(l),i.d(l,{default:()=>s});var a=i(252);const r=(0,a.uE)('<h1 id="前端技能自查表" tabindex="-1"><a class="header-anchor" href="#前端技能自查表" aria-hidden="true">#</a> 前端技能自查表</h1><p>梳理下作为前端架构师应该掌握的知识技能，方便自己能一步一步的成长为架构师。 技能掌握程度自查列表</p><h3 id="css" tabindex="-1"><a class="header-anchor" href="#css" aria-hidden="true">#</a> CSS</h3><blockquote><p>推荐两本书，1.《CSS世界》、2.《CSS揭秘》 先后看完这两本书，对提升css技术有很大帮助</p></blockquote><ul><li>命名建议与约束</li><li>CSS选择器</li><li>CSS权重</li><li>浏览器的兼容性解决方案</li><li>响应式布局方案</li><li>对css渲染性能的思考</li><li>合理使用css预处理：scss、less</li><li>图片的细节处理</li><li>图标的选择</li><li>动画与交互，对用户体验的思考</li><li>CSS计算属性</li></ul>',5),h={href:"https://blog.csdn.net/kw023781/article/details/105602177",target:"_blank",rel:"noopener noreferrer"},t=(0,a.Uk)("看详情点我《前端技能自查——CSS》"),d=(0,a.uE)('<h3 id="html" tabindex="-1"><a class="header-anchor" href="#html" aria-hidden="true">#</a> HTML</h3><ul><li>语义标签的意义</li><li>块元素、行元素、伪元素</li><li>元素自带的特殊属性</li></ul><h3 id="svg" tabindex="-1"><a class="header-anchor" href="#svg" aria-hidden="true">#</a> SVG</h3><ul><li>矢量图形的绘制</li><li>线、圆、多边形的绘制</li><li>鼠标事件的处理</li><li>图形放大缩小</li></ul><h3 id="canvas" tabindex="-1"><a class="header-anchor" href="#canvas" aria-hidden="true">#</a> Canvas</h3><ul><li>echarts 的实现原理</li><li>定时器实现动画</li><li>自适应宽高</li><li>缓存技术，提高动画性能</li></ul><h3 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript" aria-hidden="true">#</a> JavaScript</h3><ul><li>leetcode算法</li><li>this的4种写法</li><li>变量的作用域</li><li>JavaScript 编译机制（至少编译两次）</li><li>JavaScript 程序执行顺序</li></ul><h3 id="typescript" tabindex="-1"><a class="header-anchor" href="#typescript" aria-hidden="true">#</a> TypeScript</h3><ul><li>类型推断</li><li>泛型的使用</li><li>类型的定义声明</li><li>TSC编译机制</li><li></li></ul><h3 id="http" tabindex="-1"><a class="header-anchor" href="#http" aria-hidden="true">#</a> HTTP</h3><ul><li>HTTP协议、TCP三次握手</li><li>HTTP响应码</li><li>跨域</li><li>request</li><li>response</li><li>cookie</li><li>session</li></ul><h3 id="cdn与dns负载均衡" tabindex="-1"><a class="header-anchor" href="#cdn与dns负载均衡" aria-hidden="true">#</a> CDN与DNS负载均衡</h3><ul><li>CDN配置</li><li></li></ul><h3 id="浏览器内核与加载机制" tabindex="-1"><a class="header-anchor" href="#浏览器内核与加载机制" aria-hidden="true">#</a> 浏览器内核与加载机制</h3><ul><li>一次最多6次请求限制</li><li></li></ul><h3 id="浏览器api" tabindex="-1"><a class="header-anchor" href="#浏览器api" aria-hidden="true">#</a> 浏览器API</h3><h3 id="es6" tabindex="-1"><a class="header-anchor" href="#es6" aria-hidden="true">#</a> ES6</h3><h3 id="eslint" tabindex="-1"><a class="header-anchor" href="#eslint" aria-hidden="true">#</a> Eslint</h3><h3 id="v8引擎" tabindex="-1"><a class="header-anchor" href="#v8引擎" aria-hidden="true">#</a> V8引擎</h3><h3 id="tree-shaking" tabindex="-1"><a class="header-anchor" href="#tree-shaking" aria-hidden="true">#</a> Tree Shaking</h3><h3 id="单元测试" tabindex="-1"><a class="header-anchor" href="#单元测试" aria-hidden="true">#</a> 单元测试</h3><ul><li>测试管理工具 karma</li><li>测试框架 Mocha、jest</li><li>断言库 sinon-chai</li><li>测试浏览器 PhantomJS、Headless Chrome</li></ul><h3 id="rollup" tabindex="-1"><a class="header-anchor" href="#rollup" aria-hidden="true">#</a> rollup</h3><h3 id="webpack" tabindex="-1"><a class="header-anchor" href="#webpack" aria-hidden="true">#</a> webpack</h3><h3 id="vite" tabindex="-1"><a class="header-anchor" href="#vite" aria-hidden="true">#</a> vite</h3><h3 id="node" tabindex="-1"><a class="header-anchor" href="#node" aria-hidden="true">#</a> Node</h3><h3 id="vue" tabindex="-1"><a class="header-anchor" href="#vue" aria-hidden="true">#</a> Vue</h3><h3 id="微信小程序" tabindex="-1"><a class="header-anchor" href="#微信小程序" aria-hidden="true">#</a> 微信小程序</h3><h3 id="react" tabindex="-1"><a class="header-anchor" href="#react" aria-hidden="true">#</a> React</h3><h3 id="electron-桌面应用" tabindex="-1"><a class="header-anchor" href="#electron-桌面应用" aria-hidden="true">#</a> Electron 桌面应用</h3><h3 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h3><h3 id="java" tabindex="-1"><a class="header-anchor" href="#java" aria-hidden="true">#</a> Java</h3>',33),n={},s=(0,i(744).Z)(n,[["render",function(e,l){const i=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[r,(0,a._)("p",null,[(0,a._)("a",h,[t,(0,a.Wm)(i)])]),d],64)}]])},744:(e,l)=>{l.Z=(e,l)=>{for(const[i,a]of l)e[i]=a;return e}}}]);